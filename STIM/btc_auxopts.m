function auxopts=btc_auxopts(aux_init,metro_init)
% auxopts=btc_auxopts(aux_init,metro_init) initializes the auxiliary options
% for btc map generation and the Metropolis parameters
%
%   input:
%  aux_init: non-default options
%  metro_init: non-default options for Metropolis donut algorithm
%  for example, global metro_init_global; metro_init_global.numiters=1000; overrides the number of iterations
%
%  if aux_init is absent or empty, then aux_init_global, if present as a global, is used for aux_init
%  if metro_init is absent or empty, or if aux_init is absent, then metro_init_global, if present as a global, is used for metro_init
%
%   output:
%    auxopts.show_btc:   show btc details during map generation
%    auxopts.nopostrot:  set to 1 for no map rotation after synthesis (for debugging)
%    auxopts.showlayout: set to 1 to show layout
%    auxopts.adjust2x2:  adjust the relative position of 2x2 correlations
%                        so that it is in precisely the same position after rotations
%                        defaults to 0; adjustment will narrow
%                        (adjust2x2=-1) or widen (adjust2x2=1) the region of 2x2 correlations
%                        This can lead to "negative probablity" errors if
%                        figure and ground are very different.
%                        See ptbxcvt_map_edge.xls.
%       Invoking auxopts.adjust2x2 requires generation of maps that are 1
%       pixel wide, and btc_makemap will not do anything meaningful for this,
%       since it cannot make use of a supplied first row or column.
%    auxopts.trynoseam   set to 1 to make a multiband texture with no "seam"
%                        (this only works in Pickard case, and only has an effect if there are borders
%                        between two bands, both of which have nonzero parameters);
%                        defaults to 0; mods started March 2013
%    auxopts.dict:     dictionary, generated by BTC_DEFINE.
%    auxopts.show_btca:  show btca details, e.g., parameter extraction, during map generation
%    auxopts.metro_opts:  options for donut metro algorithm as set by glider_metro_def (permute donut, permode=2)
%    auxopts.metro_show:  set to show Metropolis details
%
% See also:  BTC_DEFINE, GLIDER_METRO_DEF, DONUT_METRO.
%
global aux_init_global
global metro_init_global
if (nargin<1)
    aux_init=[];
    if exist('aux_init_global','var')
        if ~isempty(aux_init_global)
            aux_init=aux_init_global;
        end
    end
end
if (nargin<2)
    metro_init=[];
    if exist('metro_init_global')
        if ~isempty(metro_init_global)
            metro_init=metro_init_global;
        end
    end
end
metro_init=filldefault(metro_init,'mapubi_bc',0); %0 for rectangular boundary conditions, 1 for periodic
metro_init=filldefault(metro_init,'nf_meth',1); %calculate number to flip as a fraction
metro_init=filldefault(metro_init,'nf_frac',1/(2^8)); %on average, flip 1/256 of the checks
metro_init=filldefault(metro_init,'nf_dist',1); %uniform distribution of target flip number 
metro_init=filldefault(metro_init,'numiters',10000);
metro_init=filldefault(metro_init,'sampfreq_stat',10000);
metro_init=filldefault(metro_init,'showfreq_map',10000);
metro_opts=glider_metro_def(0,metro_init,2);
%
auxopts=aux_init;
auxopts=filldefault(auxopts,'show_btc',0); %show BTC details
auxopts=filldefault(auxopts,'showlayout',0); %show map layout
auxopts=filldefault(auxopts,'adjust2x2',0); % adjust edges of strips based on size of template (-1: narrow, +1: widen)
auxopts=filldefault(auxopts,'nopostrot',0); %suppress post-rotation (for debugging)
auxopts=filldefault(auxopts,'dict',btc_define()); %dictionary
auxopts=filldefault(auxopts,'show_btca',0); % show augmented BTC details, 0 for none, 1 for standard, 2 for verbose
auxopts=filldefault(auxopts,'plot_btca_bigconds',1); %show BTCA bigconds plot
auxopts=filldefault(auxopts,'metro_opts',metro_opts); %donut metropolis options
auxopts=filldefault(auxopts,'metro_show',0); %set to show Metropolis details
auxopts=filldefault(auxopts,'burnin',16); %burn-in (the default in btc_nopick is 8)
auxopts=filldefault(auxopts,'trynoseam',0); %attempt to make texture with no seam
%
auxopts=filldefault(auxopts,'texres_mode',0); %0->use on-the-fly generation in btc_genstim, 1->use texture resources (this line added 7/11/13)
auxopts=filldefault(auxopts,'texres_path',''); %path to texture resources
auxopts=filldefault(auxopts,'texres_infix',''); % a specified infix for the texture resources
auxopts=filldefault(auxopts,'texres_mult_tol',0.02); %tolereance for multiplier 
auxopts=filldefault(auxopts,'texres_mincomp_tol',0.01); %tolerance for minimum
auxopts=filldefault(auxopts,'texres_sym_tol',0.0001); %tolerance for symmetry checking
%
return
