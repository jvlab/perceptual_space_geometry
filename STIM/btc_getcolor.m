function [srgb,optsused]=btc_getcolor(ic,opts,dict)
% [srgb,optsused]=btc_getcolor(ic,opts,dict) assigns a color to a pair of btc axes
%
% ic: a two-letter pair, chosen from the code letters gbcdetuvwa
% opts:
%    opts.pale:  in [0 1], but typically small, 0.1
%    opts.pcolor{i,j}: color assigned to a pair of order {i,j}
%      this is symmetrized in {i,j},
%    opts.diag_color:  add a tinge for the diagonal betas
% dict:  dictionary of binary correlation names, generated by btc_define;
%    btc_define called if this field is empty or absent
%
% srgb: a color assigned to the coordinate letters
%    if an axis pair, it is 1-opts.pale*opts.pcolor{order1,order2}
%    if not an axis pair, it is the sum of opts.pcolor{orderi,orderi}
% optsused: options used
%
% with opts.pale=0.1, this matches colors used in met_vss05_atg.
%
%  See also:  BTC_PAIRDOMAIN, BTC_DEFINE, MET_VSS05_ATG.
%
if (nargin<2)
    opts=[];
end
if (nargin<3)
    dict=btc_define;
end
opts=filldefault(opts,'pale',0.1);
opts=filldefault(opts,'diag_color',[1 0.5 0]);
pcolor_def=cell(4,4);
pcolor_def{1,4}=[1 1 0];
pcolor_def{1,3}=[0 1 1];
pcolor_def{3,4}=[1 0 1];
pcolor_def{1,2}=[0 1 0];
pcolor_def{2,3}=[0 0 1];
pcolor_def{2,4}=[1 0 0];
opts=filldefault(opts,'pcolor',pcolor_def);
%
pcolor=opts.pcolor;
for i=2:4
    for j=1:i-1
        pcolor{i,j}=pcolor{j,i};
    end
end
for i=1:4
    if isempty(pcolor{i,i})
        psum=[0 0 0];
        for j=1:4
            if ~(i==j)
                psum=psum+pcolor{i,j};
            end
        end
        pcolor{i,i}=psum/3;
    end
end
opts.pcolor=pcolor;
optsused=opts;
%
q=find(ismember(dict.codel,ic));
qord=dict.order(q);
srgb=[0 0 0];
if length(q)==2
    rgb=opts.pcolor{qord(1),qord(2)};
else
    rgb=[0 0 0];
    for iq=1:length(q)
        rgb=rgb+opts.pcolor{qord(iq),qord(iq)};
    end
end
% any diagonal betas?
ifdiag=0;
for iq=1:length(q)
    if dict.order(q(iq))==2 & dict.mult(q(iq))==1
        ifdiag=ifdiag+1;
    end
end
srgb=1-opts.pale*rgb;
if ifdiag
    srgb=0.75*srgb+0.25*opts.pale*opts.diag_color;
end
return
