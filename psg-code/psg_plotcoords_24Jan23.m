function opts_used=psg_plotcoords(coords,dim_select,sa,rays,opts)
% opts_used=psg_plotcoords(coords,dim_select,sa,rays,opts) plots psg coordinates with nice coloring
%
% note that "origin" refers to the coordinates of the random texture, which may not be zero
%
% coords: If 2d: [nstims nd] are the coordinates for each stimulus type in a single dataset
%    If 3d: [nstims nd nsets] are corresponding coordinates across
%    datasets; points plotted and then connected as specified in opts.connect_list
% dim_select: a vector of coordinates to plot, each must be in [1 nd]
%   coordinates are selected after the optional transformation
% sa: the setup structure returned from psg_readcoord_data
% rays: the ray structure returned by psg_findrays
% opts: options
%   opts.axis_handle: handle to the axis, new axis opened if empty or omitted
%   opts.line_width: line width; defaults to 1; 0 to omit lines
%   opts.line_type: line type (style)
%   opts.line_type_connect_neg: line type (style) to connect points between datasets on negative rays
%   opts.xform_offset: [1 nd], vector to translate coordinates, defaults to zeros(1,nd)
%   opts.xform_mult: [nd nd], vector to multiply coordinates
%     coordinates are plotted as (coords-xform_offset)*xform_mult
%   opts.connect_list: two-column array of datasets to be paired
%     defaults to empty, entries must be in range [1 nsets] typically generated by psg_visualize
%     if non-empty, only connecting points will be plotted.
%   opts.tag_text: optional tag text to put in the 'tag' field of plots (for later choosing
%     the legends)
%   opts.if_rings: plot rings between points at equal distances from origin
%     (see psg_findrays); characteristics controled by opts.line_width_ring,
%     opts.line_type_ring, opts.color_ring
%
% opts_used: options used
%
%  19Dec22: Invoke psg_typenames2colors for ray colors and symbols
%  21Dec22: Add transformations
%  13Jan23: Allow for dim 3 of coords to be other sets to attach, add opts.tag_text
%  24Jan23: Add ring plotting
%
%  See also: PSG_READ_COORDDATA, PSG_FINDRAYS, PSG_DEFOPTS, PSG_VISUALIZE_DEMO, FILLDEFAULT,
%    PSG_TYPENAMES2COLORS, PSG_VISUALIZE.
%
if (nargin<5)
    opts=struct;
end
opts=filldefault(opts,'axis_handle',[]);
opts=filldefault(opts,'line_width',1); %0 to omit lines
opts=filldefault(opts,'line_width_ring',1);
opts=filldefault(opts,'line_type',[]); %line type
opts=filldefault(opts,'line_type_connect_neg','--'); %line type for negative directions for connections
opts=filldefault(opts,'line_type_ring',':');
opts=filldefault(opts,'marker_sign','*+'); %symbols for negative and postive values on rays
opts=filldefault(opts,'marker_origin','o'); %symbol for origin
opts=filldefault(opts,'marker_noray','.'); %symbol if no ray
opts=filldefault(opts,'marker_size',8); %marker size
%opts=filldefault(opts,'color_rays',{[.3 .3 .3],[1 0 0],[0 .7 0],[0 0 1]}); %colors to cycle through for each ray, supplanted by psg_typenames2colors
opts=filldefault(opts,'color_origin',[0 0 0]);
opts=filldefault(opts,'color_norays',[0 0 0]);
opts=filldefault(opts,'color_ring',[0 0 0]);
opts=filldefault(opts,'if_origin_on_rays',1); %1 to include origin on rays 
opts=filldefault(opts,'axis_label_prefix','dim'); % prefix for axis label
opts=filldefault(opts,'if_use_rays',1); %1 to use ray structure, 0 to ignore
opts=filldefault(opts,'lims',[]); %2-element row vector, or, [nd 2], indicating axis ranges
opts=filldefault(opts,'if_grid',1); %1 to display grid, 0 for no grid
opts=filldefault(opts,'if_just_data',0); %1 omits plotting of axis labels, setting limits
opts=filldefault(opts,'if_legend',1);% 1 for a legend
opts=filldefault(opts,'connect_list',zeros(0,2)); 
opts=filldefault(opts,'tag_text','');
opts=filldefault(opts,'if_rings',0);
%
nsets=size(coords,3);
nconnect=size(opts.connect_list,1); %if nconnect>0, just plot connections, otherwise just plot individual dataset
%
nd=size(coords,2);
opts=filldefault(opts,'xform_offset',zeros(1,nd));
opts=filldefault(opts,'xform_mult',eye(nd));
%
%set up choices for psg_typenames2colors
%
opts_tn2c=struct();
opts_tn2c.symbs.z=opts.marker_origin;
opts_tn2c.symbs.m=opts.marker_sign(1);
opts_tn2c.symbs.p=opts.marker_sign(2);
opts_tn2c.symbs_nomatch=opts.marker_noray;
opts_tn2c.colors_nomatch=opts.color_origin;
if isfield(opts,'colors')
    opts_tn2c.colors=opts.colors;
end
%
if isempty(opts.axis_handle)
    opts.axis_handle=gca;
end
nstims=size(coords,1);
ndplot=length(dim_select);
if (ndplot==2) | (ndplot==3)
    if (opts.if_use_rays==0)
        if (nconnect==0)
            [hp,hps]=psg_plotcoords_23(coords,dim_select,opts.marker_origin,opts);
            if ~isempty(hp)
                for ih=1:length(hps)
                    set(hps{ih},'Color',opts.color_norays);
                    set(hps{ih},'MarkerSize',opts.marker_size);
                    set(hps{ih},'Tag',sprintf('%s set %2.0f data',opts.tag_text,ih));
                end
                hl=hp;
                ht='data';
            end
        else
            for ic=1:size(opts.connect_list,1)
                for ip=1:size(coords,1)
                    coords_connect=[coords(ip,:,opts.connect_list(ic,1));coords(ip,:,opts.connect_list(ic,2))];
                    [hc,hcs]=psg_plotcoords23(coords_connect,dim_select,[],opts); %plot with no symbol
                     if ~isempty(hc)
                         for ih=1:length(hc)
                            set(hcs{ih},'Color',opts.color_origin);
                            set(hcs{ih},'Tag',sprintf('%s set %2.0f connect %3.0f point %3.0f',opts.tag_text,ih,ic,ip));
                         end
                     end
                end %ip
            end %ic
        end %nconnect
    else %use ray structure
        %plot origin
        points=find(rays.whichray==0);
        if (nconnect==0) %plot each dataset
            [hp,hps]=psg_plotcoords_23(coords(points,:,:),dim_select,opts.marker_origin,opts);
            if ~isempty(hp)
                for ih=1:length(hps)
                    set(hps{ih},'Color',opts.color_origin);
                    set(hps{ih},'MarkerSize',opts.marker_size);
                    set(hps{ih},'Tag',sprintf('%s set %2.0f data origin',opts.tag_text,ih));
                end
            end
        else %connect origins
            for ic=1:size(opts.connect_list,1)
                for ip=1:length(points)
                    coords_connect=[coords(points(ip),:,opts.connect_list(ic,1));coords(points(ip),:,opts.connect_list(ic,2))];
                    [hc,hcs]=psg_plotcoords_23(coords_connect,dim_select,[],opts); %plot with no symbol
                    if ~isempty(hc)
                        for ih=1:length(hc)
                            set(hcs{ih},'Color',opts.color_origin);
                            set(hcs{ih},'Tag',sprintf('%s set %2.0f connect %3.0f origin',opts.tag_text,ih,ic));
                        end
                    end
                end %ip
            end %ic
        end %nconnect
        %set up legends
        hl=cell(0);
        ht=[];
        %plot each ray in each direction, first as points and then connect
        for iray=1:rays.nrays
            allpoints_no=find(rays.whichray==iray);
            if (opts.if_origin_on_rays)
                allpoints=union(allpoints_no,find(rays.whichray==0)); %all points on the ray, including origin
            else
                allpoints=allpoints_no;
            end
            allpoints=allpoints(:);
%           raycolor=opts.color_rays{1+mod(iray-1,length(opts.color_rays))};
            rgbs=zeros(2,3); %neg and pos, typically identical
            for isign=1:2 %1->neg, 2->pos
                if (isign==1)
                    sign_sel=find(rays.mult<0);
                else
                    sign_sel=find(rays.mult>0);
                end
                points=intersect(allpoints,sign_sel); %points to plot
                [rgbs(isign,:),symb]=psg_typenames2colors(sa.typenames(max(intersect(allpoints_no,sign_sel))),opts_tn2c);
                if (nconnect==0)
                    [hp,hps]=psg_plotcoords_23(coords(points,:,:),dim_select,symb,opts);
                    if ~isempty(hp)
                        for ih=1:length(hps)
                            set(hps{ih},'Color',rgbs(isign,:));
                            set(hps{ih},'MarkerSize',opts.marker_size);
                            set(hps{ih},'Tag',sprintf('%s set %2.0f ray %2.0f signed %2.0f',opts.tag_text,ih,iray,isign));
                        end
                        hl=[hl;hp];
                        ht=strvcat(ht,sa.typenames{points(end)});
                    end
                else %connect corresponding points
                    for ic=1:size(opts.connect_list,1)
                        for ip=1:length(points)
                            coords_connect=[coords(points(ip),:,opts.connect_list(ic,1));coords(points(ip),:,opts.connect_list(ic,2))];
                            if (isign==1)
                                line_type=opts.line_type_connect_neg;
                            else
                                line_type=opts.line_type;
                            end
                            [hc,hcs]=psg_plotcoords_23(coords_connect,dim_select,line_type,opts); %plot with no symbol
                            if ~isempty(hc)
                                for ih=1:length(hc)
                                    set(hcs{ih},'LineWidth',opts.line_width);
                                    set(hcs{ih},'Color',rgbs(isign,:));
                                    set(hcs{ih},'Tag',sprintf('%s set %2.0f ray %2.0f signed %2.0f connect %3.0f point %3.0f',opts.tag_text,ih,iray,isign,ic,ip));
                                end
                                if (ip==1)
                                    hl=[hl,hc];
                                    ht=strvcat(ht,sa.typenames{points(end)});
                                end
                            end
                        end %ip
                    end %ic
                end %nconnect
            end %isign
            if (opts.line_width>0) & (nconnect==0) %connect points within a single dataset only
                mults=rays.mult(allpoints);
                [mults_sorted,sort_order]=sort(mults);
                [hp,hps]=psg_plotcoords_23(coords(allpoints(sort_order),:,:),dim_select,opts.line_type,opts);
                if ~isempty(hp)
                    for ih=1:length(hps)
                        set(hps{ih},'LineWidth',opts.line_width);
                        set(hps{ih},'Color',mean(rgbs));
                        set(hps{ih},'Tag',sprintf('%s set %2.0f ray %2.0f nosign',opts.tag_text,ih,iray));
                    end
                end
            end %line width
        end %iray
     end %use rays
     if opts.if_rings
         nrings=length(rays.rings);
         for iring=1:nrings
             coord_ptrs=rays.rings{iring}.coord_ptrs;
             coord_cycle=[coord_ptrs coord_ptrs(1)]; %make it a cycle
             [hp,hps]=psg_plotcoords_23(coords(coord_cycle,:,:),dim_select,opts.line_type_ring,opts);
             if ~isempty(hp)
                 set(hps{ih},'LineWidth',opts.line_width_ring);
                 set(hps{ih},'Color',opts.color_ring);
                 set(hps{ih},'Tag',sprintf('%s set %2.0f ring %2.0f',opts.tag_text,ih,iring));                
             end
         end
     end
    if ~opts.if_just_data
        if (opts.if_legend)
            hleg=legend(hl,ht);
            set(hleg,'FontSize',7);
%            set(hleg,'String',ht);
        end
        xlabel(sprintf('%s%1.0f',opts.axis_label_prefix,dim_select(1)));
        ylabel(sprintf('%s%1.0f',opts.axis_label_prefix,dim_select(2)));
        if ~isempty(opts.lims)
            lims=opts.lims;
            if size(lims,1)==1
                lims=repmat(lims,ndplot,1);
            end
            set(gca,'XLim',lims(1,:));
            set(gca,'YLim',lims(2,:));
            if (ndplot==3)
                set(gca,'ZLim',lims(3,:));
            end
        end
        if (ndplot==3)
            zlabel(sprintf('%s%1.0f',opts.axis_label_prefix,dim_select(3)));
            axis vis3d;
        else
            if ~isempty(opts.lims)
                axis square;
            else
                axis equal;
            end
        end
        if opts.if_grid
            grid on;
        else
            grid off;
        end
    end %if_just_data
    hleg_exist=get(gca,'Legend'); %re-create the legend to prevent extra entries
    if ~isempty(hleg_exist) & (nconnect==0)
        legend(hl,ht);
    end
end
opts_used=opts;
return

function [hp,hps]=psg_plotcoords_23(coords_untrans,dim_select,symb,opts)
%plot points or lines in 2 or 3 dimensions. 
%line type taken from symb
%line width set to 1
%color set to black
%offset and multiplier taken from opts.xform_offset, opts.xform_mult
%
nconds=size(coords_untrans,3);
hps=cell(1,nconds);
for icond=1:nconds
    %transform as requested
    coords_trans=(coords_untrans(:,:,icond)-repmat(opts.xform_offset,size(coords_untrans,1),1))*opts.xform_mult;
    %plot selected coordinates
    coords=coords_trans(:,dim_select);
    %2 or 3d plot, with symbol specified
    if size(coords,1)==0
        hp=[];
    elseif size(coords,2)==2
        hp=plot(coords(:,1),coords(:,2),cat(2,'k',symb));
        hps{icond}=hp;
        hold on;
    elseif size(coords,2)==3
        hp=plot3(coords(:,1),coords(:,2),coords(:,3),cat(2,'k',symb));
        hps{icond}=hp;
        hold on;
    end
end
return
